This code has been tested with Python 2.7.x and will not run with Python 3.x
yet as is relies on / being floor division.

systematic.py is called with the size m of the universe as command line argument
and will search all families that separate this universe for families where 
the total abundance is lower than m. This is feasible for m <= 5.

The total abundance is the sum of (frequency - n/2 + 1) for all abundant
elements.

database.py will let you generate random, union closed, separating families as
a function of several parameters:

 universe size m
 number of basis sets
 target minimum member cardinality
 target maximum member cardinality

The members are drawn uniformly from the search space defined by the four
parameters above. This means that you will find less families with members of
cardinality near 1 or m as they usually represent only a small fraction of the
search space.

Families will be saved in a MySQL database together with characteristics:

 number of abundant elements
 total abundance
 total size
 minimum member cardinality
 maximum member cardinality
 average member cardinality

Families breeded from the selected families with a genetic algorithm 
optimizing for minimum total abundance will also be saved.

If the program is run several times, it will retry parameter tuples for which
no random family has been generated yet.
